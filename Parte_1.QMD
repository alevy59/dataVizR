---
title: Visualização de dados com R
subtitle: Aula 1 - Introdução a visualização de dados
author: Marcus Ramalho
format: 
    revealjs:
        incremental: true  
        transition: slide
        background-transition: fade
        theme: dark
date: today
footer: Universidade Federal Fluminense - Programa de formação de executivos - Ciência de dados
---

```{r}
library(tidyverse)
```

# Marcus Ramalho

-   Pesquiso FII's/PKM/Web3.0 com ciência de dados
-   Matlab/Fortran/Pascal/VBA/AutoLISP(LISP)/PHP/HTML/\
    M(power query)/TypeScript/Python/R❤️e Rust(loading)
-   Administração UFF
-   Mestrando PPGAd-UFF


## O curso {auto-animate=true}

Aula 1

-   Tipos de Gráficos por Tipo de Variável
-   Gráficos no R base, plot, hist, boxplot
-   Exercícios de fixação
-   gramática dos gráficos e ggplot2
    -   cores, formas, tamanhos
-   Escalas Logarítmicas e Lineares
-   
-   EDA com o pacote esquisse
-   Exercícios de fixação
-   Tarefa com nota

## Tipos de variáveis

-   Variáveis categóricas - Representam categorias ou grupos
    -  Nominais - Não possuem ordem
        Exemplo: sexo, cor dos olhos
    -  Ordinais - Possuem ordem
        Exemplo: escolaridade, estado civil

-   Variáveis contínuas - Representam valores numéricos
    -  Discretas - Valores inteiros
        Exemplo: número de filhos, número de carros, número de acessos
    -  Contínuas - Valores reais
        Exemplo: peso, altura, salário, etc.


## Tipo de Gráficos por Tipo de Variável

-   Variáveis categóricas
    -   barras
    -   setor
    -   etc...
-   Variáveis contínuas
    -   Histograma
    -   boxplot
    -   Gráfico de dispersão
    -   etc...
  
## Um gráfico para cada tipo de variável

Ferramentas úteis: 

```{=html}
<iframe width="1120" height="500" src="https://www.data-to-viz.com/" title="Webpage example"></iframe>
```

## Gráficos no R base - plot

```{r}
#| echo: true
#| eval: false
plot(iris$Sepal.Length, iris$Sepal.Width,
    col = iris$Species, pch = 19,
    xlab = "Comprimento", ylab = "Largura", main = "Comprimento x Largura da Sépala"
)

# Legenda
legend(
    "topright",
    legend = levels(iris$Species),
    col = c("black", "red", "green"),
    pch = 19,
    title = "Espécies",
    bg = "lightgray"
)
```

## Gráficos no R base - plot

```{r}
#| echo: false

plot(iris$Sepal.Length, iris$Sepal.Width,
    col = iris$Species, pch = 19,
    xlab = "Comprimento", ylab = "Largura", main = "Comprimento x Largura da Sépala"
)

# Legenda
legend(
    "topright",
    legend = levels(iris$Species),
    col = c("black", "red", "green"),
    pch = 19,
    title = "Espécies",
    bg = "lightgray"
)
```

## Gráficos no R base - hist

```{r}
#| echo: true
hist(iris$Sepal.Length,
    xlab = "Comprimento da Sépala",
    ylab = "Frequência",
    main = "Histograma do Comprimento da Sépala",
    col = "lightblue",
    border = "black"
)
```

## Gráficos no R base - boxplot

```{r}
#| echo: true

boxplot(iris$Sepal.Length,
    xlab = "Espécies",
    ylab = "Comprimento da Sépala",
    main = "Gráfico de Caixa do Comprimento da Sépala",
    col = "lightblue",
    border = "black"
)
```

## Gráficos no R base - barplot

```{r}
#| echo: true

barplot(table(iris$Species),
    xlab = "Espécies",
    ylab = "Contagem",
    main = "Gráfico de Barras das Espécies",
    col = "lightblue",
    border = "black"
)
```

## Gráficos no R base - pie

```{r}
#| echo: true
pie(table(iris$Species),
    main = "Gráfico de Pizza das Espécies",
    col = c("lightblue", "lightgreen", "lightpink"),
    border = "black"
)
```



## Exercícios de fixação 1 

:::{.nonincremental}

Use o conjunto de dados 'casas' do pacote 'dados' para responder as questões a seguir.

```{r}
#| echo: true
#| eval: false
install.packages("dados")
library(dados)
```



a. Identifique duas variáveis categóricas. Liste cinco exemplos de valores únicos para uma das variáveis categóricas.

b. Utilizando o pacote de gráficos base do R, escolha uma variável contínua e gere um histograma para visualizar a distribuição. Explique o que você observa no gráfico.

:::


## Exercícios de fixação 2

:::{.nonincremental}

Use o conjunto de dados 'dados_atmosfera' do pacote 'dados' para responder as questões a seguir.

a. Utilizando o pacote de gráficos base do R, crie um gráfico de barras para representar a distribuição da variável categórica "nuvem_baixa". Adicione rótulos aos eixos.

b. Crie um gráfico de dispersão para visualizar a relação entre as variáveis contínuas "temp_superficie" e "pressao". Adicione rótulos aos eixos x e y, e destaque cores diferentes para cada ano (utilizando a variável categórica "ano").

:::

## Exercícios de fixação 1 a - Resposta

Identificando todas as variáveis não numéricas do conjunto de dados

```{r}
#| echo: true

# Carregar o pacote
library(dados)

casas %>%
    select_if(~ is.character(.)) %>%
    names(.)



```

## Exercícios de fixação 1 a - Resposta

Listando cinco exemplos de valores únicos para a variável categórica "vizinhanca"

```{r}
#| echo: true

casas %>%
    count(vizinhanca) %>%
    head(5)

```

## Exercícios de fixação 1 b - Resposta

Criando um histograma para a variável contínua "area_construida"

```{r}
#| echo: true
#| eval: false

# Criar o gráfico
hist(casas$garagem_area,
    xlab = "Área da Garagem",
    ylab = "Frequência",
    main = "Histograma da Área da Garagem",
    col = "lightblue",
    border = "lightblue"
)
```

## Exercícios de fixação 1 b - Resposta

```{r}
#| echo: false

# Criar o gráfico
hist(casas$garagem_area,
    xlab = "Área da Garagem",
    ylab = "Frequência",
    main = "Histograma da Área da Garagem",
    col = "lightblue",
    border = "lightblue"
)
```

## Exercícios de fixação 2 - Resposta

Criando um gráfico de barras para a variável categórica "nuvem_baixa"  

```{r}

#| echo: true

barplot(table(dados_atmosfera$nuvem_baixa),
    xlab = "Nuvem Baixa",
    ylab = "Contagem",
    main = "Distribuição de Nuvem Baixa",
    col = "lightblue",
    border = "black"
)

```

## Exercícios de fixação 2 - Resposta

Criando um gráfico de dispersão para as variáveis contínuas "temp_superficie" e "pressao"

```{r}

#| echo: true

# Criar o gráfico
plot(dados_atmosfera$temp_superficie, dados_atmosfera$pressao,
    col = as.numeric(dados_atmosfera$ano), pch = 19,
    xlab = "Temperatura da Superfície",
    ylab = "Pressão",
    main = "Relação entre Temperatura da Superfície e Pressão"
)

# Adicionar a legenda
legend(
    "topright",
    legend = unique(dados_atmosfera$ano),
    col = unique(as.numeric(dados_atmosfera$ano)),
    pch = 19,
    title = "Ano",
    bg = "lightgray"
)

```

## Gramática dos gráficos e ggplot2

O que é a gramática dos gráficos?

-   É um conjunto de regras que descrevem a estrutura de um gráfico e como ele é construído a partir dos dados.
-   O ggplot2 é um pacote do R que implementa a gramática dos gráficos.

## ggplot2 - Exemplo
  
```{r}  
#| echo: true
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
    geom_point() +
    labs(title = "Comprimento x Largura da Sépala", x = "Comprimento", y = "Largura") +
    theme_minimal()
```

## Camadas 

```{r}
#| echo: true

ggplot()

```


## ggplot2 - Elementos da gramática


```{r}

# Dados: Este é o conjunto de dados que queremos visualizar.
data <- mtcars

# Aesthetics: Mapeia variáveis nos dados para aspectos visuais do gráfico.
aes <- aes(x = mpg, y = hp)

# Geometrias: Descreve o tipo de gráfico que queremos criar.
geom <- geom_point()

# Escalas: Controla como os dados são mapeados para os aspectos visuais do gráfico.
scale <- scale_y_log10()

# Facets: Permite criar múltiplos gráficos pequenos, cada um mostrando um subconjunto dos dados.
facet <- facet_wrap(~cyl)

# Estatísticas: Realiza cálculos nos dados.
stat <- stat_summary(fun = mean, geom = "point", color = "red", size = 3)

# Coordenadas: Define o sistema de coordenadas do gráfico.

# Tema: Controla a aparência não-dados do gráfico, como a cor de fundo e a fonte do texto.
theme <- theme_minimal()

# Títulos e legendas
labels <- labs(
    title = "Relação entre MPG e HP",
    x = "MPG",
    y = "HP (escala logarítmica)",
    color = "Número de cilindros"
)

# Criar o gráfico
ggplot(data, aes) + geom + scale + facet + stat + theme + labels

```

## ggplot2 - Elementos da gramática


```{r}
#| echo: true
#| eval: false

# Dados: Este é o conjunto de dados que queremos visualizar.
data <- mtcars

# Aesthetics: Mapeia variáveis nos dados para aspectos visuais do gráfico.
aes <- aes(x = mpg, y = hp)

# Geometrias: Descreve o tipo de gráfico que queremos criar.
geom <- geom_point()

# Escalas: Controla como os dados são mapeados para os aspectos visuais do gráfico.
scale <- scale_y_log10()

# Facets: Permite criar múltiplos gráficos pequenos, cada um mostrando um subconjunto dos dados.
facet <- facet_wrap(~cyl)

# Estatísticas: Realiza cálculos nos dados.
stat <- stat_summary(fun = mean, geom = "point", color = "red", size = 3)

# Coordenadas: Define o sistema de coordenadas do gráfico.

# Tema: Controla a aparência não-dados do gráfico, como a cor de fundo e a fonte do texto.
theme <- theme_minimal()

# Títulos e legendas
labels <- labs(
    title = "Relação entre MPG e HP",
    x = "MPG",
    y = "HP (escala logarítmica)",
    color = "Número de cilindros"
)

# Criar o gráfico
ggplot(data, aes) + geom + scale + facet + stat + theme + labels

```

## ggplot2 - Elementos da gramática


```{r}
#| echo: true
#| eval: false

# Criar o gráfico
ggplot(mtcars, aes(x = mpg, y = hp)) +
    geom_point() +
    scale_y_log10() +
    facet_wrap(~cyl) +
    stat_summary(fun = mean, geom = "point", color = "red", size = 3) +
    theme_minimal() +
    labs(
        title = "Relação entre MPG e HP",
        x = "MPG",
        y = "HP (escala logarítmica)",
        color = "Número de cilindros"
    )

```



## Gramática dos gráficos e ggplot2 - cores


```{r}


ggplot(data, aes(x = mpg, y = hp, color = factor(cyl))) +
    geom_point() +
    labs(title = "Relação entre MPG e HP", x = "MPG", y = "HP") +
    theme_minimal()

```

## Gramática dos gráficos e ggplot2 - formas

Exemplo

```{r}
#| echo: true


ggplot(data, aes(x = mpg, y = hp, shape = factor(cyl))) +
    geom_point() +
    labs(title = "Relação entre MPG e HP", x = "MPG", y = "HP") +
    theme_minimal()

```

## Gramática dos gráficos e ggplot2 - tamanhos

Exemplo

```{r}
#| echo: true

ggplot(data, aes(x = mpg, y = hp, size = wt)) +
    geom_point() +
    labs(title = "Relação entre MPG e HP", x = "MPG", y = "HP") +
    theme_minimal()

```

## Escalas Lineares e Logarítmicas

:::{layout-ncol=2}

```{r}
#| echo: true

x <- seq(1, 100, 1)
y <- x^2

plot(x, y, type = "l", col = "blue", lwd = 2, xlab = "X", ylab = "Y", main = "Gráfico com Escala Linear")
```

-  Escalas lineares são as mais comuns
-  Representam a relação entre duas variáveis de forma proporcional
-  Dados variam de forma linear

:::

## Escalas Lineares e Logarítmicas

:::{layout-ncol=2}

Exemplo de gráfico com escala logarítmica

```{r}
#| echo: true

# Dados
x <- seq(1, 100, 1)
y <- exp(x)

# Gráfico com escala logarítmica no eixo y
plot(x, y,
    type = "l", col = "blue", lwd = 2,
    xlab = "X", ylab = "Y (log scale)",
    main = "Gráfico com Escala Logarítmica",
    log = "y"
)
```

-  Escalas logarítmicas são usadas quando os dados variam de forma exponencial
-  
:::